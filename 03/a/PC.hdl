// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    Add16(a=outreg ,b[0]=true ,out=incby1 );  //out[t+1] = out[t] + 1 
    
    Mux16(a=outreg,b=incby1,sel=inc,out=stage1);
    Mux16(a=stage1,b=in,sel=load,out=stage2);
    Mux16(a=stage2,b=false,sel=reset,out=inreg); // priority reset > load > inc
    
    Or(a=load,b=inc,out=load1);
    Or(a=load1,b=reset,out=load2); // checking if load or inc or reset bit is on
    
    Register(in=inreg ,load=load2 ,out=outreg );
    And16(a=true,b=outreg,out=out);
}
