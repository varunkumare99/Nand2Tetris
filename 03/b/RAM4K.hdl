// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    
    //loading the correct register based on address
    DMux8Way(in=load ,sel=address[9..11] ,a=loadr0 ,b=loadr1 ,c=loadr2 ,
    d=loadr3 ,e=loadr4 ,f=loadr5 ,g=loadr6 ,h=loadr7 );
    
    RAM512(in=in ,load=loadr0 ,address=address[0..8] ,out=r0 );
    RAM512(in=in ,load=loadr1 ,address=address[0..8] ,out=r1 );
    RAM512(in=in ,load=loadr2 ,address=address[0..8] ,out=r2 );
    RAM512(in=in ,load=loadr3 ,address=address[0..8] ,out=r3 );
    RAM512(in=in ,load=loadr4 ,address=address[0..8] ,out=r4 );
    RAM512(in=in ,load=loadr5 ,address=address[0..8] ,out=r5 );
    RAM512(in=in ,load=loadr6 ,address=address[0..8] ,out=r6 );
    RAM512(in=in ,load=loadr7 ,address=address[0..8] ,out=r7 );
    
    //probe out
    Mux8Way16(a=r0 ,b=r1 ,c=r2 ,d=r3 ,e=r4 ,f=r5 ,g=r6 ,h=r7 ,sel=address[9..11] ,out=out );
}
